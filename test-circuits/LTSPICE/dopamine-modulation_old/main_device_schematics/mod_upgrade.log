Circuit: * C:\Users\YurBurGer\memristive-brain\dopamine-modulation\main_device_schematics\mod_upgrade.asc

Questionable use of curly braces in "bx 0 x  i={if(((({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt})))>0)&(v(x)<{{roff}})),({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt}))),if(((({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt})))<0)&(v(x)>{{ron}})),({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt}))),0))}"
    Error: undefined symbol in: "if(((((beta)*([v](pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt))))>0)&(v(x)<((roff)))),((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt)))),if(((((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt))))<0)&(v(x)>((ron)))),((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt)))),0))"
Questionable use of curly braces in "b§rmem pl mn r={v(x)}"
    Error: undefined symbol in: "[v](x)"
Questionable use of curly braces in "bx 0 x  i={if(((({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt})))>0)&(v(x)<{{roff}})),({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt}))),if(((({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt})))<0)&(v(x)>{{ron}})),({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt}))),0))}"
    Error: undefined symbol in: "if(((((beta)*([v](pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt))))>0)&(v(x)<((roff)))),((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt)))),if(((((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt))))<0)&(v(x)>((ron)))),((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt)))),0))"
Questionable use of curly braces in "b§rmem pl mn r={v(x)}"
    Error: undefined symbol in: "[v](x)"
Questionable use of curly braces in "bx 0 x  i={if(((({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt})))>0)&(v(x)<{{roff}})),({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt}))),if(((({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt})))<0)&(v(x)>{{ron}})),({beta}*(v(pl,mn))+0.5*({alpha}-{beta})*(abs((v(pl,mn))+{vt})-abs((v(pl,mn))-{vt}))),0))}"
    Error: undefined symbol in: "if(((((beta)*([v](pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt))))>0)&(v(x)<((roff)))),((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt)))),if(((((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt))))<0)&(v(x)>((ron)))),((beta)*(v(pl,mn))+0.5*((alpha)-(beta))*(abs((v(pl,mn))+(vt))-abs((v(pl,mn))-(vt)))),0))"
Questionable use of curly braces in "b§rmem pl mn r={v(x)}"
    Error: undefined symbol in: "[v](x)"
Limiting rise time of source v4 to 0.002
Limiting fall time of source v4 to 0.002
Limiting rise time of source v3 to 0.002
Limiting fall time of source v3 to 0.002
WARNING: Node U14:X is floating.
WARNING: Node U15:X is floating.
WARNING: Node U16:X is floating.

Direct Newton iteration failed to find .op point.  (Use ".option noopiter" to skip.)
Starting Gmin stepping
Gmin = 10
Gmin = 1.07374
Gmin = 0.115292
Gmin = 0.0123794
Gmin = 0.00132923
Gmin = 0.000142725
Gmin = 1.5325e-005
Gmin = 1.6455e-006
Gmin = 1.76685e-007
Gmin = 1.89714e-008
Gmin = 2.03704e-009
Gmin = 2.18725e-010
Gmin = 2.34854e-011
Gmin = 2.52173e-012
Gmin = 2.70769e-013
Gmin = 0
Gmin stepping succeeded in finding the operating point.


Date: Fri Sep 15 20:32:06 2017
Total elapsed time: 5431.224 seconds.

tnom = 27
temp = 27
method = modified trap
totiter = 65231228
traniter = 65230790
tranpoints = 15394037
accept = 11540651
rejected = 3853386
matrix size = 73
fillins = 99
solver = Normal
Thread vector: 37.3/12.6[4] 5.3/2.5[4] 4.2/3.0[2] 0.7/1.5[1]  2592/500
Matrix Compiler1: 9.16 KB object code size  3.6/1.5/[0.9]
Matrix Compiler2: 9.94 KB object code size  1.5/1.9/[1.1]

